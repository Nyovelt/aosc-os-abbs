abinfo "Setting up Golang build parameters ..."
export \
    GOPATH="${SRCDIR}/go" \
    GOFLAGS="" \
    GOFLAGS_SNAP="-tags nomanagers" \
    CGO_ENABLED="1" \
    CGO_CFLAGS="${CFLAGS}" \
    CGO_CPPFLAGS="${CPPFLAGS}" \
    CGO_CXXFLAGS="${CXXFLAGS}" \
    CGO_LDFLAGS="${LDFLAGS}" \
    GOURL="github.com/snapcore/snapd"
flags=(-buildmode=pie -ldflags "-s -linkmode external -extldflags '$LDFLAGS'" -trimpath -mod=vendor)
staticflags=(-buildmode=pie -ldflags "-s -linkmode external -extldflags '$LDFLAGS -static'" -trimpath -mod=vendor)

abinfo "Setting up install paths ..."
export \
    DATADIR="/usr/share" \
    SYSTEMDSYSTEMUNITDIR="/usr/lib/systemd/system" \
    SNAP_MOUNT_DIR="/var/lib/snapd/snap" \
    SNAPD_ENVIRONMENT_FILE="/etc/default/snapd" \
    DBUSSERVICESDIR="/usr/share/dbus-1/services" \

abinfo "Transferring install paths to MAKEFLAGS ..."
export MAKEFLAGS+=" \
    LIBEXECDIR=${LIBEXEC}/snapd \
    BINDIR=${BINDIR} \
    DATADIR=${DATADIR} \
    PREFIX=${PREFIX} \
    SYSTEMDSYSTEMUNITDIR=${SYSTEMDSYSTEMUNITDIR} \
    SNAP_MOUNT_DIR=${SNAP_MOUNT_DIR} \
    SNAPD_ENVIRONMENT_FILE=${SNAPD_ENVIRONMENT_FILE} \
    DBUSSERVICESDIR=${DBUSSERVICESDIR}"

abinfo "Creating symlink in GOPATH ..."
mkdir -pv "${SRCDIR}/go/src/github.com/snapcore/"
ln --no-target-directory -vfs "${SRCDIR}" \
    "${SRCDIR}/go/src/${GOURL}"

abinfo "Building the snap exectuable ..."
go build \
    -v "${flags[@]}" \
    -o "$srcdir/go/bin/snap" \
    $GOFLAGS_SNAP "${GOURL}/cmd/snap"

for component in snapd snap-seccomp snap-failure snap; do
    abinfo "Building the ${component} executable ..."
    go build \
        -v "${flags[@]}" \
        -o "${SRCDIR}/go/bin/${component}" \
        $GOFLAGS "${GOURL}/cmd/${component}"
done

for static_component in snap-update-ns snap-exec snapctl; do
    abinfo "Building the static ${static_component} exectuable ..."
    go build \
        -v "${staticflags[@]}" \
        -o "${SRCDIR}/go/bin/${static_component}" \
        $GOFLAGS \
        "${GOURL}/cmd/${static_component}"
done

abinfo "Generating data files ..."
make \
    -C "${SRCDIR}/data"

cd "${SRCDIR}/cmd"
abinfo "Configuring other Snap utilities ..."
./configure \
    --prefix="/usr" \
    --libexecdir="${LIBEXEC}/snapd" \
    --with-snap-mount-dir="${SNAP_MOUNT_DIR}" \
    --enable-apparmor \
    --enable-nvidia-biarch \
    --enable-merged-usr

abinfo "Building other Snap utilities ..."
make

abinfo "Installing Bash completions ..."
install -Dvm644 "${SRCDIR}/data/completion/bash/snap" \
    "${PKGDIR}/usr/share/bash-completion/completions/snap"
install -Dvm644 "${SRCDIR}/data/completion/bash/complete.sh" \
    "${PKGDIR}/usr/libexec/snapd/complete.sh"
install -Dvm644 "${SRCDIR}/data/completion/bash/etelpmoc.sh" \
    "${PKGDIR}/usr/libexec/snapd/etelpmoc.sh"

abinfo "Installing Zsh completions ..."
install -Dvm644 "${SRCDIR}/data/completion/zsh/_snap" \
    "${PKGDIR}/usr/share/zsh/site-functions/_snap"

abinfo "Installing systemd units and D-Bus services ..."
make install \
    -C "${SRCDIR}/data" \
    DESTDIR="${PKGDIR}"

abinfo "Installing PolicyKit policy for snapd ..."
install -Dvm644 "${SRCDIR}/data/polkit/io.snapcraft.snapd.policy" \
    "${PKGDIR}/usr/share/polkit-1/actions/io.snapcraft.snapd.policy"

abinfo "Installing the snap executable ..."
install -Dvm755 "${SRCDIR}/go/bin/snap" \
    "${PKGDIR}/usr/bin/snap"

for executable in snapctl snapd snap-seccomp snap-failure \
    snap-update-ns snap-exec; do
    abinfo "Installing ${executable} to /usr/libexec/snapd/ ..."
    install -Dvm755 "${SRCDIR}/go/bin/${executable}" \
        "${PKGDIR}/usr/libexec/snapd/${executable}"
done

abinfo "Creating symlink for snapctl ..."
ln -sv ../libexec/snapd/snapctl \
    "${PKGDIR}/usr/bin/snapctl"

abinfo "Creating necessary directories ..."
install -dvm755 \
    "${PKGDIR}/var/lib/snapd/snap" \
    "${PKGDIR}/var/cache/snapd" \
    "${PKGDIR}/var/lib/snapd/apparmor" \
    "${PKGDIR}/var/lib/snapd/assertions" \
    "${PKGDIR}"/var/lib/snapd/dbus-1/{,system-}services \
    "${PKGDIR}/var/lib/snapd/desktop/applications" \
    "${PKGDIR}/var/lib/snapd/device" \
    "${PKGDIR}/var/lib/snapd/hostfs" \
    "${PKGDIR}/var/lib/snapd/mount" \
    "${PKGDIR}/var/lib/snapd/seccomp/bpf" \
    "${PKGDIR}/var/lib/snapd/snap/bin" \
    "${PKGDIR}/var/lib/snapd/snaps" \
    "${PKGDIR}/var/lib/snapd/inhibit" \
    "${PKGDIR}"/var/lib/snapd/lib/gl{,32} \
    "${PKGDIR}"/var/lib/snapd/lib/{glvnd,vulkan}
install -dvm111 \
    "${PKGDIR}/var/lib/snapd/void"
install -dvm700 \
    "${PKGDIR}/var/lib/snapd/{cache,cookie}"

abinfo "Installing other Snap utilities ..."
make install \
    -C "${SRCDIR}/cmd" \
    DESTDIR="${PKGDIR}"

abinfo "Installing manpage for the snap executable ..."
mkdir -pv "${PKGDIR}/usr/share/man/man8"
"${SRCDIR}/go/bin/snap" help --man > "${PKGDIR}/usr/share/man/man8/snap.8"

abinfo "Installing the info data file with snapd version..."
install -Dvm644 "${SRCDIR}/go/src/${GOURL}/data/info" \
    "${PKGDIR}/usr/libexec/snapd/info"

abinfo "Removing Ubuntu Core specific units and scripts ..."
# Remove the special program for shutting down Ubuntu Core
# We don't need that on AOSC OS
rm -fv \
    "${PKGDIR}/usr/lib/systemd/system/snapd.system-shutdown.service" \
    "${PKGDIR}/usr/libexec/snapd/system-shutdown"

# Remove Ubuntu Core specific "chooser" trigger
# Not applicable on AOSC OS
rm -fv "${PKGDIR}/usr/lib/systemd/system/snapd.recovery-chooser-trigger.service"

# Remove Ubuntu Core specific self-repair scripts and services
# Thses scripts or services refuse to run on OSes other than Ubuntu Core
rm -fv \
    "${PKGDIR}/usr/lib/systemd/system/snapd.autoimport.service" \
    "${PKGDIR}"/usr/lib/systemd/system/snapd.snap-repair.* \
    "${PKGDIR}"/usr/lib/systemd/system/snapd.core-fixup.* \
    "${PKGDIR}/usr/libexec/snapd/snapd.core-fixup.sh"

# ubuntu-core-launcher is a duplicate of snap-confine
rm -fv "${PKGDIR}/usr/bin/ubuntu-core-launcher"

