export GOPATH="${SRCDIR}/go"
export GOFLAGS=""
export GOFLAGS_SNAP="-tags nomanagers"
export CGO_ENABLED="1"
export CGO_CFLAGS="${CFLAGS}"
export CGO_CPPFLAGS="${CPPFLAGS}"
export CGO_CXXFLAGS="${CXXFLAGS}"
export CGO_LDFLAGS="${LDFLAGS}"
export GOURL="github.com/snapcore/snapd"

export LIBEXECDIR="/usr/libexec/snapd"
export BINDIR="/usr/bin"
export DATADIR="/usr/share"
export PREFIX="/usr"
export SYSTEMDSYSTEMUNITDIR="/usr/lib/systemd/system"
export SNAP_MOUNT_DIR="/var/lib/snapd/snap"
export SNAPD_ENVIRONMENT_FILE="/etc/default/snapd"
export DBUSSERVICESDIR="/usr/share/dbus-1/services"

export MAKEFLAGS+=" LIBEXECDIR=${LIBEXECDIR}"
export MAKEFLAGS+=" BINDIR=${BINDIR}"
export MAKEFLAGS+=" DATADIR=${DATADIR}"
export MAKEFLAGS+=" PREFIX=${PREFIX}"
export MAKEFLAGS+=" SYSTEMDSYSTEMUNITDIR=${SYSTEMDSYSTEMUNITDIR}"
export MAKEFLAGS+=" SNAP_MOUNT_DIR=${SNAP_MOUNT_DIR}"
export MAKEFLAGS+=" SNAPD_ENVIRONMENT_FILE=${SNAPD_ENVIRONMENT_FILE}"
export MAKEFLAGS+=" DBUSSERVICESDIR=${DBUSSERVICESDIR}"

cd "${SRCDIR}"

abinfo "Creating symlink in GOPATH..."
mkdir -pv "${SRCDIR}/go/src/github.com/snapcore/"
ln --no-target-directory -fs "${SRCDIR}" "${SRCDIR}/go/src/${GOURL}"

flags=(-buildmode=pie -ldflags "-s -linkmode external -extldflags '$LDFLAGS'" -trimpath -mod=vendor)
staticflags=(-buildmode=pie -ldflags "-s -linkmode external -extldflags '$LDFLAGS -static'" -trimpath -mod=vendor)

abinfo "Building snap..."
go build -v "${flags[@]}" -o "$srcdir/go/bin/snap" $GOFLAGS_SNAP "${GOURL}/cmd/snap"

for component in \
	snapd \
	snap-seccomp \
	snap-failure \
	snap
do
	abinfo "Building go binary ${component}..."
	go build -v "${flags[@]}" \
		-o "${SRCDIR}/go/bin/${component}" \
		$GOFLAGS \
		"${GOURL}/cmd/${component}"
done

for static_component in \
	snap-update-ns \
	snap-exec \
	snapctl
do
	abinfo "Building static go binary ${static_component}..."
	go build -v "${staticflags[@]}" \
		-o "${SRCDIR}/go/bin/${static_component}" \
		$GOFLAGS \
		"${GOURL}/cmd/${static_component}"
done

abinfo "Generating data files..."
make -C "${SRCDIR}/data"

cd "${SRCDIR}/cmd"
abinfo "Configuring other snap utilities..."
./configure \
	--prefix="/usr" \
	--libexecdir="${LIBEXECDIR}" \
	--with-snap-mount-dir="${SNAP_MOUNT_DIR}" \
	--enable-apparmor \
	--enable-nvidia-biarch \
	--enable-merged-usr
abinfo "Building other snap utilities..."
make

abinfo "Installing bash completion..."
install -Dvm644 "${SRCDIR}/data/completion/bash/snap" \
	"${PKGDIR}/usr/share/bash-completion/completions/snap"
install -Dvm644 "${SRCDIR}/data/completion/bash/complete.sh" \
	"${PKGDIR}/usr/libexec/snapd/complete.sh"
install -Dvm644 "${SRCDIR}/data/completion/bash/etelpmoc.sh" \
	"${PKGDIR}/usr/libexec/snapd/etelpmoc.sh"

abinfo "Installing zsh completion..."
install -Dvm644 "${SRCDIR}/data/completion/zsh/_snap" \
	"${PKGDIR}/usr/share/zsh/site-functions/_snap"

abinfo "Installing systemd units and dbus services..."
make -C "${SRCDIR}/data" DESTDIR="${PKGDIR}" install

abinfo "Installing polkit policy..."
install -Dvm644 "${SRCDIR}/data/polkit/io.snapcraft.snapd.policy" \
	"${PKGDIR}/usr/share/polkit-1/actions/io.snapcraft.snapd.policy"

abinfo "Installing executables..."
install -Dvm755 "${SRCDIR}/go/bin/snap" \
	"${PKGDIR}/usr/bin/snap"

for executable in \
	snapctl \
	snapd \
	snap-seccomp \
	snap-failure \
	snap-update-ns \
	snap-exec
do
	install -Dvm755 "${SRCDIR}/go/bin/${executable}" \
		"${PKGDIR}/usr/libexec/snapd/${executable}"
done

abinfo "Creating symlink for snapctl..."
ln -s "/usr/lib/snapd/snapctl" "${PKGDIR}/usr/bin/snapctl"

abinfo "Creating necessary directories..."
install -dvm755 "${PKGDIR}/var/lib/snapd/snap"
install -dvm755 "${PKGDIR}/var/cache/snapd"
install -dvm755 "${PKGDIR}/var/lib/snapd/apparmor"
install -dvm755 "${PKGDIR}/var/lib/snapd/assertions"
install -dvm755 "${PKGDIR}/var/lib/snapd/dbus-1/services"
install -dvm755 "${PKGDIR}/var/lib/snapd/dbus-1/system-services"
install -dvm755 "${PKGDIR}/var/lib/snapd/desktop/applications"
install -dvm755 "${PKGDIR}/var/lib/snapd/device"
install -dvm755 "${PKGDIR}/var/lib/snapd/hostfs"
install -dvm755 "${PKGDIR}/var/lib/snapd/mount"
install -dvm755 "${PKGDIR}/var/lib/snapd/seccomp/bpf"
install -dvm755 "${PKGDIR}/var/lib/snapd/snap/bin"
install -dvm755 "${PKGDIR}/var/lib/snapd/snaps"
install -dvm755 "${PKGDIR}/var/lib/snapd/inhibit"
install -dvm755 "${PKGDIR}/var/lib/snapd/lib/gl"
install -dvm755 "${PKGDIR}/var/lib/snapd/lib/gl32"
install -dvm755 "${PKGDIR}/var/lib/snapd/lib/vulkan"
install -dvm755 "${PKGDIR}/var/lib/snapd/lib/glvnd"
install -dvm111 "${PKGDIR}/var/lib/snapd/void"
install -dvm700 "${PKGDIR}/var/lib/snapd/cookie"
install -dvm700 "${PKGDIR}/var/lib/snapd/cache"

abinfo "Installing other snap utilities..."
make -C "${SRCDIR}/cmd" DESTDIR="${PKGDIR}" install

abinfo "Installing manpage for snap..."
mkdir -pv "${PKGDIR}/usr/share/man/man8"
"${SRCDIR}/go/bin/snap" help --man > "${PKGDIR}/usr/share/man/man8/snap.8"

abinfo "Installing the info data file with snapd version..."
install -Dvm644 "${SRCDIR}/go/src/${GOURL}/data/info" \
	"${PKGDIR}/usr/libexec/snapd/info"

abinfo "Removing snappy-core-specific units and scripts..."
rm -fv "${PKGDIR}/usr/lib/systemd/system/snapd.system-shutdown.service"
rm -fv "${PKGDIR}/usr/lib/systemd/system/snapd.autoimport.service"
rm -fv "${PKGDIR}/usr/lib/systemd/system/snapd.recovery-chooser-trigger.service"
rm -fv "${PKGDIR}"/usr/lib/systemd/system/snapd.snap-repair.*
rm -fv "${PKGDIR}"/usr/lib/systemd/system/snapd.core-fixup.*
rm -fv "${PKGDIR}/usr/libexec/snapd/snapd.core-fixup.sh"
rm -fv "${PKGDIR}/usr/bin/ubuntu-core-launcher"
rm -fv "${PKGDIR}/usr/libexec/snapd/system-shutdown"
