--- mozilla/toolkit/components/filepicker/nsFilePicker.js.orig	2020-02-18 02:39:23.000000000 +0300
+++ mozilla/toolkit/components/filepicker/nsFilePicker.js	2021-06-27 01:42:16.120912873 +0300
@@ -215,39 +215,6 @@ nsFilePicker.prototype = {
 
       let promises = [];
 
-      // Let's create the DOMFileEnumerator right now because it requires some
-      // async operation.
-      if (this.mFilesEnumerator) {
-        this.mDOMFilesEnumerator = {
-          QueryInterface: XPCOMUtils.generateQI([Ci.nsISimpleEnumerator]),
-
-          mFiles: [],
-          mIndex: 0,
-
-          hasMoreElements() {
-            return (this.mIndex < this.mFiles.length);
-          },
-
-          getNext() {
-            if (this.mIndex >= this.mFiles.length) {
-              throw Cr.NS_ERROR_FAILURE;
-            }
-            return this.mFiles[this.mIndex++];
-          }
-        };
-
-        for (let i = 0; i < this.mFilesEnumerator.mFiles.length; ++i) {
-          if (this.mFilesEnumerator.mFiles[i].exists()) {
-            let promise =
-              this.mParentWindow.File.createFromNsIFile(
-                this.mFilesEnumerator.mFiles[i]).then(file => {
-                  this.mDOMFilesEnumerator.mFiles.push(file);
-                });
-            promises.push(promise);
-          }
-        }
-      }
-
       Promise.all(promises).then(() => {
         if (aFilePickerShownCallback) {
           aFilePickerShownCallback.done(result);
