--- a/comm/mailnews/base/src/nsMessenger.cpp.orig	2021-06-03 02:28:44.359765243 +0300
+++ b/comm/mailnews/base/src/nsMessenger.cpp	2021-06-27 01:17:37.124375314 +0300
@@ -341,7 +341,7 @@ nsresult nsMessenger::ShowPicker(nsIFile
   // Spin the event loop until the callback was called.
   nsCOMPtr<nsIThread> thread(do_GetCurrentThread());
   while (!cb->mPickerDone) {
-    NS_ProcessPendingEvents(thread);
+    NS_ProcessNextEvent(thread, true);
   }
 
   *aResult = cb->mResult;
--- a/comm/mailnews/base/src/nsMessenger.cpp.orig	2021-06-03 02:28:44.359765243 +0300
+++ b/comm/mailnews/base/src/nsMessenger.cpp	2021-06-27 01:17:37.124375314 +0300
@@ -1930,6 +1930,14 @@ nsSaveMsgListener::OnStopRequest(nsIRequ
     m_outputStream = nullptr;
   }
 
+  if(mTransfer)
+  {
+    mTransfer->OnProgressChange64(nullptr, nullptr, mMaxProgress, mMaxProgress, mMaxProgress, mMaxProgress);
+    mTransfer->OnStateChange(nullptr, nullptr, nsIWebProgressListener::STATE_STOP |
+      nsIWebProgressListener::STATE_IS_NETWORK, NS_OK);
+    mTransfer = nullptr; // break any circular dependencies between the progress dialog and use
+  }
+
   if (m_saveAllAttachmentsState)
   {
     m_saveAllAttachmentsState->m_curIndex++;
@@ -1994,14 +2002,6 @@ nsSaveMsgListener::OnStopRequest(nsIRequ
     }
   }
 
-  if(mTransfer)
-  {
-    mTransfer->OnProgressChange64(nullptr, nullptr, mMaxProgress, mMaxProgress, mMaxProgress, mMaxProgress);
-    mTransfer->OnStateChange(nullptr, nullptr, nsIWebProgressListener::STATE_STOP |
-      nsIWebProgressListener::STATE_IS_NETWORK, NS_OK);
-    mTransfer = nullptr; // break any circular dependencies between the progress dialog and use
-  }
-
   if (mUrlHasStopped && mListener)
     mListener->OnStopRunningUrl(mListenerUri, rv);
 
--- a/comm/suite/components/downloads/DownloadsCommon.jsm	2010-01-01 00:00:00.000000000 +0300
+++ b/comm/suite/components/downloads/DownloadsCommon.jsm-OK	2021-06-26 00:42:23.345370248 +0300
@@ -34,6 +34,7 @@ XPCOMUtils.defineLazyModuleGetters(this,
   NetUtil: "resource://gre/modules/NetUtil.jsm",
   PluralForm: "resource://gre/modules/PluralForm.jsm",
   DownloadHistory: "resource://gre/modules/DownloadHistory.jsm",
+  PlacesUtils: "resource://gre/modules/PlacesUtils.jsm",
   Downloads: "resource://gre/modules/Downloads.jsm",
   DownloadUIHelper: "resource://gre/modules/DownloadUIHelper.jsm",
   DownloadUtils: "resource://gre/modules/DownloadUtils.jsm",
@@ -704,10 +705,11 @@ DownloadsDataCtor.prototype = {
       // Store the end time that may be displayed by the views.
       download.endTime = Date.now();
 
-      // This state transition code should actually be located in a Downloads
-      // API module (bug 941009).
-      // This might end with an exception if it is an unsupported uri scheme.
-      DownloadHistory.updateMetaData(download);
+      if (PlacesUtils.history.canAddURI(PlacesUtils.toURI(download.source.url))) {
+        // This state transition code should actually be located in a Downloads
+        // API module (bug 941009).
+        DownloadHistory.updateMetaData(download);
+      }
 
       if (download.succeeded) {
         this.playDownloadSound();
