
# HG changeset patch
# User Markus Stange <mstange@themasta.com>
# Date 1522257104 14400
# Node ID cfc4cc67701f0cb1e371cfa5bea33e9f9c24a288
# Parent  0ea578dacf239fbb31c3d6e3f6b616d6f61da263
Bug 1449641 - Use the correct parameter when computing the clear rect. r=sotaro

This was incorrectly using the invalid rect, so it was clearing more than
necessary and not taking advantage of the opaque region that the caller computes.
The idea is that we don't need to clear parts of the invalid region that will be
covered by something opaque.

MozReview-Commit-ID: LhEkVUMnjC9

diff --git a/gfx/layers/basic/BasicCompositor.cpp b/gfx/layers/basic/BasicCompositor.cpp
--- a/gfx/layers/basic/BasicCompositor.cpp
+++ b/gfx/layers/basic/BasicCompositor.cpp
@@ -308,17 +308,17 @@ BasicCompositor::CreateRenderTargetForWi
   } else {
     IntRect windowRect = rect;
     // Adjust bounds rect to account for new origin at (0, 0).
     if (windowRect.Size() != mDrawTarget->GetSize()) {
       windowRect.ExpandToEnclose(IntPoint(0, 0));
     }
     rt = new BasicCompositingRenderTarget(mDrawTarget, windowRect);
     if (!aClearRect.IsEmpty()) {
-      IntRect clearRect = aRect.ToUnknownRect();
+      IntRect clearRect = aClearRect.ToUnknownRect();
       mDrawTarget->ClearRect(Rect(clearRect - rt->GetOrigin()));
     }
   }
 
   return rt.forget();
 }
 
 already_AddRefed<DataTextureSource>

