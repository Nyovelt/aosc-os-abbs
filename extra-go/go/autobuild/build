abinfo "Setting up build environment ..."
export GOROOT="$SRCDIR"
export GOBIN="$GOROOT/bin"
export GOPATH="$SRCDIR/../"
export GOROOT_FINAL=/usr/lib/go
export GOROOT_BOOTSTRAP=/usr/lib/go
if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    export GOAMD64=v1
fi

case ${CROSS:-$ARCH} in
    amd64)
        buildarch="amd64" ;;
    armel)
        buildarch="arm" ;;
    arm64)
        buildarch="arm64" ;;
    loongson3)
        buildarch="mips64le" ;;
    ppc64el)
        buildarch="ppc64le" ;;
    riscv64)
        buildarch="riscv64" ;;
esac

abinfo "Setting OS to linux, build architecture to $buildarch ..."
export GOOS=linux
export GOARCH="$buildarch"

(
    cd "$SRCDIR"/src

    abinfo "Building Go toolchain ..."
    GO_LDFLAGS="-w -s" bash make.bash --no-clean -v
    if [[ "${CROSS:-$ARCH}" != "ppc64" &&
          "${CROSS:-$ARCH}" != "loongson3" && "${CROSS:-$ARCH}" != "riscv64" ]]; then
        abinfo "Building and preparing to install Go toolchain with data race detector ..."
        PATH="$GOBIN:$PATH" go install -v -race std

        abinfo "Preparing to install the Go toolchain ..."
        PATH="$GOBIN:$PATH" go install -v -buildmode=shared std
    else
        abinfo "Preparing to install the Go toolchain ..."
        PATH="$GOBIN:$PATH" go install -v std
    fi
)

abinfo "Creating directories for installation ..."
mkdir -pv \
    "$PKGDIR/"{etc/profile.d,usr/{share/go,lib/go,lib/go/src,lib/go/site/src}}

abinfo "Installing the Go toolchain ..."
cp -rv "$SRCDIR"/{doc,misc} \
    -t "$PKGDIR/usr/share/go"
ln -sv ../../share/go/doc \
    "$PKGDIR/usr/lib/go/doc"
cp -av "$SRCDIR"/bin \
    "$PKGDIR/usr"
cp -av "$SRCDIR"/pkg \
    "$PKGDIR/usr/lib/go"
cp -av "$GOROOT/src" \
    "$PKGDIR/usr/lib/go/"
cp -av "$GOROOT/src/cmd" \
    "$PKGDIR/usr/lib/go/src/cmd"
cp -av "$GOROOT/lib" \
    "$PKGDIR/usr/lib/go/"

abinfo "Installing Makefiles ..."
install -Dvm644 "$SRCDIR"/src/Make.* \
    "$PKGDIR/usr/lib/go/src"

abinfo "Removing generated binaries from installed source archive ..."
find "$PKGDIR/usr/lib/go/src/" \
    -type f -name '*.[ao]' -delete
find "$PKGDIR/usr/lib/go/src" \
    -type f -executable -delete

abinfo "Setting executable bit for sql.go ..." 
find "$PKGDIR" \
    -type f -name sql.go -exec chmod -v -x {} \;

abinfo "Creating a symlink for /usr/lib/go/bin to /usr/bin ..."
ln -svf ../../bin \
    "$PKGDIR/usr/lib/go/bin"

abinfo "Installing build scripts ..."
install -Dvm755 "$SRCDIR"/src/make.bash \
    "$PKGDIR/usr/lib/go/src/make.bash"
install -Dvm755 "$SRCDIR"/src/run.bash \
    "$PKGDIR/usr/lib/go/src/run.bash"
cp -rv "$SRCDIR"/misc \
    "$PKGDIR/usr/lib/go/"

abinfo "Removing CGI bin in Go documentation ..."
rm -fv "$PKGDIR/usr/share/go/doc/articles/wiki/get.bin"

abinfo "Installing VERSION file ..."
install -Dvm644 "$SRCDIR"/VERSION \
    "$PKGDIR/usr/lib/go/VERSION"

abinfo "Touching all installed files ..."
find "$PKGDIR"/usr/{lib/go/pkg,bin} \
    -type f -exec touch '{}' +

abinfo "Installing basic Go tools ..."
install -dvm755 "$PKGDIR"/usr/lib/go/pkg/tool/"${GOOS}"_"$GOARCH"
install -pvm755 "$SRCDIR"/pkg/tool/"${GOOS}"_"$GOARCH"/* \
   "$PKGDIR"/usr/lib/go/pkg/tool/"${GOOS}"_"$GOARCH"

abinfo "Renaming go and gofmt for alternatives ..."
mv -v "$PKGDIR"/usr/bin/go{,-google}
mv -v "$PKGDIR"/usr/bin/gofmt{,-google}

abinfo "Preparing to build extra Go tools ..."
mkdir -pv "$SRCDIR"/go-tools/src/golang.org/x/
cp -rv "$SRCDIR"/../tools \
    "$SRCDIR"/go-tools/src/golang.org/x/tools
cp -rv "$SRCDIR"/../net \
    "$SRCDIR"/go-tools/src/golang.org/x/net
cd "$SRCDIR"/go-tools/src/golang.org/x/tools

export GOPATH="$SRCDIR/go-tools"

if [[ "${CROSS:-$ARCH}" != "loongson3" ]]; then
    abinfo "Enabling PIE for tool building ..."
    GO_PIE_FLAG="-buildmode=pie"
fi

abinfo "Building extra Go tools ..."
"$GOROOT"/bin/go install \
    -ldflags "-w -s -extldflags '-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/autobuild3/specs/hardened-ld'" \
    -v -a -trimpath $GO_PIE_FLAG \
    "$SRCDIR"/go-tools/src/golang.org/x/tools/cmd/...

# List adapted from Arch Linux ..."
abinfo "Installing extra Go tools ..."
for i in benchcmp callgraph compilebench cover digraph eg fiximports \
         go-contrib-init godex godoc goimports gomvpkg gorename gotype \
         goyacc guru html2article present ssadump stringer \
         toolstash; do
    install -Dvm755 "$SRCDIR"/bin/$i \
        "$PKGDIR"/usr/bin/$i
done

cd "$SRCDIR"
